name: CI/CD Pipeline

on:
  
  push:
    branches: 
      - master
  
# allows you to manually execute this pipeline from the Actions tab.
# workflow_dispatch:

defaults:
 run:
  working-directory: ./backend

jobs:
  app-unit-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code 
      uses: actions/checkout@v4

    - name: Setup Python 
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' 
    
    - name: Create virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt

    - name: Run Tests with Coverage
      run: |
        source venv/bin/activate
        pytest --cov=./ --cov-report=xml --cov-report=html
  
    - name: Print debugging information 
      run: |
        echo "Python Version: $(python --version)"
        echo "Working Directory: $(pwd)"
        echo "Contents of Working Directory: $(ls -l)"
        echo "Contents of site-packages: $(ls -l venv/lib/python*/site-packages)"

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.xml

  app-sonarcloud-scan:
    needs: app-unit-test
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code 
        uses: actions/checkout@v4

      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: ./backend

      # Setup sonar-scanner
      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v8

      - name: Run SonarCloud scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
          -Dsonar.projectKey=hannora-sonar-org_falsk-app \
          -Dsonar.organization=hannora-sonar-org \
          -Dsonar.sources=. \
          -Dsonar.projectVersion=1.0 \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.qualitygate.wait=true \
          -Dsonar.coverageReportPaths=coverage.xml \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  publish-app:
    needs: app-sonarcloud-scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code 
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/notes:latest
